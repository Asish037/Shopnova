import {StyleSheet} from 'react-native';

// Common theme-aware styles that can be used throughout the app
export const createThemeStyles = (themeColors) => {
  return StyleSheet.create({
    // Container styles
    container: {
      flex: 1,
      backgroundColor: themeColors.background,
    },
    card: {
      backgroundColor: themeColors.card,
      borderRadius: 12,
      padding: 16,
      marginVertical: 8,
      shadowColor: themeColors.text,
      shadowOffset: {
        width: 0,
        height: 2,
      },
      shadowOpacity: 0.1,
      shadowRadius: 8,
      elevation: 4,
    },
    
    // Text styles
    title: {
      fontSize: 24,
      fontWeight: 'bold',
      color: themeColors.text,
      marginBottom: 16,
    },
    subtitle: {
      fontSize: 18,
      fontWeight: '600',
      color: themeColors.text,
      marginBottom: 12,
    },
    bodyText: {
      fontSize: 16,
      color: themeColors.text,
      lineHeight: 24,
    },
    caption: {
      fontSize: 14,
      color: themeColors.textSecondary,
      lineHeight: 20,
    },
    
    // Button styles
    primaryButton: {
      backgroundColor: themeColors.primary,
      borderRadius: 8,
      paddingVertical: 12,
      paddingHorizontal: 24,
      alignItems: 'center',
      justifyContent: 'center',
    },
    secondaryButton: {
      backgroundColor: themeColors.surface,
      borderWidth: 1,
      borderColor: themeColors.primary,
      borderRadius: 8,
      paddingVertical: 12,
      paddingHorizontal: 24,
      alignItems: 'center',
      justifyContent: 'center',
    },
    buttonText: {
      fontSize: 16,
      fontWeight: '600',
      color: themeColors.text,
    },
    primaryButtonText: {
      fontSize: 16,
      fontWeight: '600',
      color: '#FFFFFF',
    },
    
    // Input styles
    input: {
      backgroundColor: themeColors.surface,
      borderWidth: 1,
      borderColor: themeColors.border,
      borderRadius: 8,
      paddingHorizontal: 16,
      paddingVertical: 12,
      fontSize: 16,
      color: themeColors.text,
    },
    inputLabel: {
      fontSize: 14,
      fontWeight: '500',
      color: themeColors.text,
      marginBottom: 8,
    },
    
    // Divider styles
    divider: {
      height: 1,
      backgroundColor: themeColors.border,
      marginVertical: 16,
    },
    
    // Status styles
    success: {
      backgroundColor: themeColors.success,
      color: '#FFFFFF',
    },
    warning: {
      backgroundColor: themeColors.warning,
      color: '#FFFFFF',
    },
    error: {
      backgroundColor: themeColors.error,
      color: '#FFFFFF',
    },
    info: {
      backgroundColor: themeColors.info,
      color: '#FFFFFF',
    },
  });
};

// Theme-aware color functions
export const getThemeColor = (themeColors, colorType, fallback = '#000000') => {
  return themeColors[colorType] || fallback;
};

// Theme-aware opacity functions
export const getThemeColorWithOpacity = (themeColors, colorType, opacity = 1) => {
  const color = themeColors[colorType] || '#000000';
  if (color.startsWith('#')) {
    // Convert hex to rgba
    const r = parseInt(color.slice(1, 3), 16);
    const g = parseInt(color.slice(3, 5), 16);
    const b = parseInt(color.slice(5, 7), 16);
    return `rgba(${r}, ${g}, ${b}, ${opacity})`;
  }
  return color;
};

// Common shadow styles
export const getShadowStyle = (themeColors, elevation = 4) => {
  return {
    shadowColor: themeColors.text,
    shadowOffset: {
      width: 0,
      height: elevation / 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: elevation,
    elevation,
  };
};

// Theme-aware border radius presets
export const borderRadius = {
  small: 4,
  medium: 8,
  large: 12,
  xlarge: 16,
  round: 50,
};

// Theme-aware spacing presets
export const spacing = {
  xs: 4,
  sm: 8,
  md: 16,
  lg: 24,
  xl: 32,
  xxl: 48,
};

// Theme-aware font sizes
export const fontSize = {
  xs: 12,
  sm: 14,
  md: 16,
  lg: 18,
  xl: 20,
  xxl: 24,
  xxxl: 32,
};
